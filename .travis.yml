branches:
  only:
  - /^v[0-9]/

language: python

cache:
  - pip
  - directories:
    - $HOME/.cache/pip
    - ${PYENV_CACHE_PATH:-$HOME/.pyenv_cache}

env:
  global:
    # travis encrypt PYPIPASSWORD=secret_password --add env.global
    secure: ggV2/f4LBr78bvBS4osuXIK7QvLFnPpZ6U4FDFLU6EbTxseg+mkcLqefeNsU7wzUyAJHIu6G/0ZHu5lGANNEPhL4Nkchb0WXIxCNreBfoHDoF93yLm+WCRrDLj4AlZETaaHnW3515KYoYll7b/U32vhMXN7E1s75+O3j6SEuwTMVW6hVwmqg865pOAcVVV3KCTh7Nm+uy3NzbO5QiTvI8yEgizBm2Q9972jK6fTHmX/UZZ7kuZSIh4Iy9Bm7ONcHwZdaSSDeWQOXU0WD2e6AyjJbqrp9ba7GKhaVET4dPjjRHx/QzIUFXlH2bnSKh2JsqLoca2zMyOmRgXUDAWdbO/qAsZgQwSZCIQgjRTjUEPJEUs7wJlqP+7a4Gk23qSMj+lxuP+shW+/yBoG7jW9Fh/pKGgRLwvVrGtf86aIuAPTqqODqQJ7b2rwfErE7eyutyvmALaOdByxsVe/ijewzva6mbnH0kddCW+jOZanWWsSvt/aXYCaLtvjPOW4cBTJnGN68OBjf+99dJep+oLsbfQNmjE92YqPRjB2FjOA+QJeuCGLi9bFDZJMjrq80+a3wy9zJX6Eyy0fILNSMsInz98T0eu5A5ZZoJTjCV7fB54KOYMeP3fFeRz4ZG1J64frowPHXBLz2R3sFBP49lXiSDvLT91/B+ydLEEs/O5V0F1w=

matrix:
  include:
    # Sources
    - os: linux
      dist: trusty
      env: SETUP_BUILD='sdist'

    # Manylinux binaries
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE='quay.io/pypa/manylinux1_x86_64'
           DOCKER_OPTIONS='-e PYTHON_VERSION=27'
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE='quay.io/pypa/manylinux1_i686'
           DOCKER_OPTIONS='-e PYTHON_VERSION=27'
           DOCKER_PRE_CMD='linux32'

    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE='quay.io/pypa/manylinux1_x86_64'
           DOCKER_OPTIONS='-e PYTHON_VERSION=36'
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE='quay.io/pypa/manylinux1_i686'
           DOCKER_OPTIONS='-e PYTHON_VERSION=36'
           DOCKER_PRE_CMD='linux32'

    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE='quay.io/pypa/manylinux1_x86_64'
           DOCKER_OPTIONS='-e PYTHON_VERSION=26'
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE='quay.io/pypa/manylinux1_i686'
           DOCKER_OPTIONS='-e PYTHON_VERSION=26'
           DOCKER_PRE_CMD='linux32'

    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE='quay.io/pypa/manylinux1_x86_64'
           DOCKER_OPTIONS='-e PYTHON_VERSION=35'
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE='quay.io/pypa/manylinux1_i686'
           DOCKER_OPTIONS='-e PYTHON_VERSION=35'
           DOCKER_PRE_CMD='linux32'

    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE='quay.io/pypa/manylinux1_x86_64'
           DOCKER_OPTIONS='-e PYTHON_VERSION=34'
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE='quay.io/pypa/manylinux1_i686'
           DOCKER_OPTIONS='-e PYTHON_VERSION=34'
           DOCKER_PRE_CMD='linux32'

    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE='quay.io/pypa/manylinux1_x86_64'
           DOCKER_OPTIONS='-e PYTHON_VERSION=33'
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE='quay.io/pypa/manylinux1_i686'
           DOCKER_OPTIONS='-e PYTHON_VERSION=33'
           DOCKER_PRE_CMD='linux32'

    - sudo: required
      arch: arm64
      services:
        - docker
      env: DOCKER_IMAGE='quay.io/pypa/manylinux2014_aarch64'
           DOCKER_OPTIONS='-e PYTHON_VERSION=36'

    - sudo: required
      arch: arm64
      services:
        - docker
      env: DOCKER_IMAGE='quay.io/pypa/manylinux2014_aarch64'
           DOCKER_OPTIONS='-e PYTHON_VERSION=37'

    - sudo: required
      arch: arm64
      services:
        - docker
      env: DOCKER_IMAGE='quay.io/pypa/manylinux2014_aarch64'
           DOCKER_OPTIONS='-e PYTHON_VERSION=38'

    - sudo: required
      arch: arm64
      services:
        - docker
      env: DOCKER_IMAGE='quay.io/pypa/manylinux2014_aarch64'
           DOCKER_OPTIONS='-e PYTHON_VERSION=39'

    # OS X 10.12 binaries
    - os: osx
      osx_image: xcode8.3
      language: objective-c
      env: PYENV_VERSION='2.7.13' PYENV_VERSION_STRING='Python 2.7.13'

    - os: osx
      osx_image: xcode8.3
      language: objective-c
      env: PYENV_VERSION='3.6.0' PYENV_VERSION_STRING='Python 3.6.0'

    - os: osx
      osx_image: xcode8.3
      language: objective-c
      env: PYENV_VERSION='3.5.2' PYENV_VERSION_STRING='Python 3.5.2'

    - os: osx
      osx_image: xcode8.3
      language: objective-c
      env: PYENV_VERSION='3.4.5' PYENV_VERSION_STRING='Python 3.4.5'

    - os: osx
      osx_image: xcode8.3
      language: objective-c
      env: PYENV_VERSION='3.3.6' PYENV_VERSION_STRING='Python 3.3.6'

    # OS X 10.11 binaries
    - os: osx
      osx_image: xcode7.3
      language: objective-c
      env: PYENV_VERSION='2.7.13' PYENV_VERSION_STRING='Python 2.7.13'
    - os: osx
      osx_image: xcode7.3
      language: objective-c
      env: PYENV_VERSION='3.6.0' PYENV_VERSION_STRING='Python 3.6.0'

    - os: osx
      osx_image: xcode7.3
      language: objective-c
      env: PYENV_VERSION='3.5.2' PYENV_VERSION_STRING='Python 3.5.2'

    - os: osx
      osx_image: xcode7.3
      language: objective-c
      env: PYENV_VERSION='3.4.5' PYENV_VERSION_STRING='Python 3.4.5'

    - os: osx
      osx_image: xcode7.3
      language: objective-c
      env: PYENV_VERSION='3.3.6' PYENV_VERSION_STRING='Python 3.3.6'

    # OS X 10.10 binaries
    - os: osx
      osx_image: xcode6.4
      language: objective-c
      env: PYENV_VERSION='2.7.13' PYENV_VERSION_STRING='Python 2.7.13'

    - os: osx
      osx_image: xcode6.4
      language: objective-c
      env: PYENV_VERSION='3.6.0' PYENV_VERSION_STRING='Python 3.6.0'

    - os: osx
      osx_image: xcode6.4
      language: objective-c
      env: PYENV_VERSION='3.5.2' PYENV_VERSION_STRING='Python 3.5.2'

    - os: osx
      osx_image: xcode6.4
      language: objective-c
      env: PYENV_VERSION='3.4.5' PYENV_VERSION_STRING='Python 3.4.5'

    - os: osx
      osx_image: xcode6.4
      language: objective-c
      env: PYENV_VERSION='3.3.6' PYENV_VERSION_STRING='Python 3.3.6'


before_install:
  - if [[ "$DOCKER_IMAGE" == "" ]]; then source "${SETUP_SCRIPT:-.travis/pyenv-setup.sh}"; fi
  - python --version

install:
  - if [[ "$DOCKER_IMAGE" != "" ]]; then docker pull ${DOCKER_IMAGE}; fi

script:
  - if [[ "$DOCKER_IMAGE" != "" ]]; then docker run --rm -v `pwd`:/io ${DOCKER_OPTIONS} ${DOCKER_IMAGE} ${DOCKER_PRE_CMD} /io/.travis/manylinux-build.sh; fi
  - if [[ "$DOCKER_IMAGE" == "" ]]; then pip install wheel && python setup.py ${SETUP_BUILD:-bdist_wheel}; fi

after_success:
  - ls -la dist/
  - if [[ "$TRAVIS_TAG" != "" ]]; then pip install twine && for file in dist/*; do twine upload -u Kronuz -p ${PYPIPASSWORD} "${file}"; done; fi
